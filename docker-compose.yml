version: '3.9'

services:
  db:
    container_name: postgres-db
    image: postgres:14-alpine
    # restart: always
    user: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    # restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile-api
    env_file:
      - .env
    command: "./docker-entrypoint.sh"
    environment:
      - DB_HOST=db
      - DB_READ_HOST=db
      - WAIT_HOSTS:postgres:5432
    ports:
      - "8080:8080"
    #    networks:
    #      - docker_network
    volumes:
      - ./api:/api
    links:
      - db
      - cache

  cache:
    container_name: cache
    image: 'redis:alpine'
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  pg-data:
    external: false
  cache:
    driver: local
